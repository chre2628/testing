defaults: &defaults
  docker:
    - image: debian:stretch
    - image: alpine/git

version: 2

jobs:
  build:
    environment: &environment_variables
      TERRAFORM_LOCATION: ./test1
      AFFECTED_FILES: /tmp/affected_files.txt

    <<: *defaults
    
    docker:
      - image: alpine/git
    
    steps:
      - checkout
      - run: &hello_world
          command: |
            echo "${TERRAFORM_LOCATION}"
      - run:
          name: Git Diff
          type: shell
          command: |
            touch ${AFFECTED_FILES}
            commit_range=$(echo ${CIRCLE_COMPARE_URL} | awk -F"/" '{print $NF}')
            if [[ "${CIRCLE_BRANCH}" != master ]]; then
              if [[ `echo ${commit_range} | grep "\.\."` != "" ]]; then
                startRange=$(echo ${commit_range} | awk -F"\." '{print $1}')
                endRange=$(echo ${commit_range} | awk -F"\." '{print $NF}')
                echo "Start Range: ${startRange}" &&  git show ${startRange}... --name-status 2>/dev/null | egrep "^[M|A|D]\s+" >> ${AFFECTED_FILES} || true
                echo "End Range: ${endRange}" &&  git show ${endRange} --name-status | egrep "^[M|A|D]\s+" >> ${AFFECTED_FILES} 2>/dev/null || true
              else 
                echo "Commit ID: ${commit_range}" &&  git show ${commit_range} --name-status | grep "^[M|A|D]\s+" >> ${AFFECTED_FILES}
              fi
              cat ${AFFECTED_FILES} | sort | uniq
            fi
  deploy_qa:
    environment: 
      <<: *environment_variables
      TERRAFORM_LOCATION: ./test2

    <<: *defaults
    
    docker:
      - image: alpine/git

    steps:
      - checkout
      - run:
         <<: *hello_world
      - run:
         command: |
            ROLLBACK_IMAGE=$(awk -F'=' '{print $NF}' < /root/project/Projects/HelloWorld/rollback/rollback.cfg)
            docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
            docker pull chre268/helloworld:${ROLLBACK_IMAGE}

workflows:
  version: 2
  deployment_pipeline:
    jobs:
      - build
      - advance_to_qa:
          requires:
            - build
          type: approval
          filters:
            branches:
              only:
                - master
      - deploy_qa:
          requires:
            - advance_to_qa
